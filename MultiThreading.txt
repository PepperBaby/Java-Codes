
public class TestSleepDemo {

	static Thread t1,t2 =null;
	public static void main(String[] args) 
	{

		System.out.println("Main Tread Starts here....");
		MyThread obj1 = new MyThread("Welcome");
		MyThread obj2 = new MyThread("Capgemini"); 
		
		t1 = new Thread(obj1);
		t2 = new Thread(obj2); 
		
		t1.start();
		t2.start();
		
		try 
		{
			t1.join();  //finish child thread first and then finish main thread tasks.
			t2.join();
		}
		catch (InterruptedException e1) 
		{
			e1.printStackTrace();
		}
		
		Thread currThread = Thread.currentThread();
		String threadName = currThread.getName();
		int threadPrior = currThread.getPriority();
		
		for(int i=1;i<5;i++)
		{
			System.out.println(threadName +" has priority of: "+threadPrior +" i = "+i);
			try 
			{
				Thread.sleep(500);
			} 
			catch (InterruptedException e) 
			{
				e.printStackTrace();
			}
		}
		System.out.println("Main Ends Here.");

	}

}
*************************************************************************


public class MyThread implements Runnable
{
	String msg;
	public MyThread(String msg)
	{
		this.msg=msg;
	}
	@Override
	public void run()
	{
		Thread currThread =Thread.currentThread();
		if(currThread == TestSleepDemo.t2)
		{
			try 
			{
				TestSleepDemo.t1.join();
			} 
			catch (InterruptedException e) 
			{
				e.printStackTrace();
			}
		}
	
		for (int j=0;j<3;j++)
		{
			
			System.out.println(currThread.getName()+" Says:  "+msg);
			try 
			{
				Thread.sleep(2000);
			}
			catch (InterruptedException e) 
			{
				e.printStackTrace();
			}
		}
	}

}
