import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.sql.*;


public class TestSQLStatements {

	public static void main(String[] args) {

		System.out.println("MENU\nChoose SQL Statements you want to perform:");
		System.out.println("1. Select All \n"+"2. Delete on empId \n"+"3. Insert \n"
				+ "4. Update \n"+"5. Select on empId");
		Scanner sc = new Scanner(System.in);
		int choice = sc.nextInt();

		Connection con = null; 

		PreparedStatement pst = null;
		ResultSet rs = null;
		try 
		{
			Class.forName("oracle.jdbc.driver.OracleDriver");	

			con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",
					"System","Capgemini123");

			switch(choice)
			{
			case 1:
				String selQry = "SELECT * FROM emp_142884";
				pst=con.prepareStatement(selQry);	
				rs = pst.executeQuery();
				System.out.println("Id\tName\t	Salary");
				while(rs.next())  
				{

					System.out.println(rs.getInt("emp_id")+"\t"+rs.getString("emp_name")+
							"\t	"+rs.getInt("emp_sal"));
				}
				break;


			case 2:
				System.out.println("Enter no of delete statements");
				int n = sc.nextInt();
				String deleteQry = "DELETE FROM emp_142884 WHERE emp_id = ?";
				pst = con.prepareStatement(deleteQry);
				for (int i = 0 ; i<n ; i++)
				{
					System.out.println("Enter empId whose entry u want to delete: ");
					int empId = sc.nextInt();
					pst.setInt(1, empId);
					int dataDeleted = pst.executeUpdate();

				}
				System.out.println("Data is deleted....\n" );
				break;


			case 3:
				System.out.println("Enter no of insert statements");
				int n1 = sc.nextInt();
				String insertQry = "INSERT INTO emp_142884(emp_Id,emp_Name,emp_Sal,emp_DOJ) "  //column name
						+ "VALUES (?,?,?,?)";

				pst = con.prepareStatement(insertQry);
				for (int i = 0 ; i<n1 ; i++)
				{
					System.out.println("Enter Id: ");
					int empId = sc.nextInt();
					System.out.println("Enter Name: ");
					String empName = sc.next();
					System.out.println("Enter Salary: ");
					float empSal = sc.nextFloat();
					System.out.println("Enter Date of Joining: ");
					String empDOJ = sc.next();


					pst.setInt(1, empId);            
					pst.setString(2, empName);
					pst.setFloat(3, empSal);
					pst.setString(4, empDOJ);

					int dataAdded = pst.executeUpdate();  
				}
				System.out.println("Data is added...." );
				break;


			case 4:
				System.out.println("Choose what to update: 1.empName 2.empSal");
				int ch = sc.nextInt();
				if(ch==2)
				{
				String updateQry = "UPDATE emp_142884 SET emp_sal = emp_sal + 10000 "
						+ " WHERE emp_sal < 30000";

				pst = con.prepareStatement(updateQry);
				int dataUpdates = pst.executeUpdate();
				System.out.println("Data is Updated...." );
				}
				else
				{
					System.out.println("Enter empId whose name is to be updated ");
					int id = sc.nextInt();
					System.out.println("Enter new name to update");
					String en = sc.next();
					
					String updateQry = "UPDATE emp_142884 SET emp_name = ? "
							+ " WHERE emp_id =?";

					pst = con.prepareStatement(updateQry);
					
					pst.setInt(1, id);            
					pst.setString(2, en);
					int dataUpdates = pst.executeUpdate();
					System.out.println("Data is Updated...." );
				}
				break;

			case 5:
				System.out.println("Enter Id: ");
				int empId = sc.nextInt();

				String selectQry = "SELECT * FROM emp_142884 WHERE emp_id = ?";

				pst = con.prepareStatement(selectQry);
				pst.setInt(1, empId); 
				rs = pst.executeQuery();
				System.out.println("Id\tName\tSalary");

				rs.next();
				System.out.println(rs.getInt("emp_Id")+"\t"+rs.getString("emp_Name")+"\t"+rs.getInt("emp_sal"));
				break;
				
			default:
				System.out.println("Not a valid choice select from given menu.");
			}
		}
		catch (ClassNotFoundException | SQLException e) 
		{
			e.printStackTrace();
		} 
		finally
		{
			try 
			{
				pst.close();
				con.close();
			} 
			catch (SQLException e) 
			{			
				e.printStackTrace();
			}
		}

	}

}
****************Meta data to know the name of the column of unknown table******************************************************


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;


public class TestResultSetMetaData {

	public static void main(String[] args) {

		Connection con = null; 
		Statement st = null; 
		ResultSet rs = null;
		ResultSetMetaData rsmd = null;
		try 
		{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",
					"System","Capgemini123");
			st = con.createStatement();
			rs = st.executeQuery("SELECT * FROM emp_142884");
			rsmd = rs.getMetaData();
			int colCount=rsmd.getColumnCount();
			System.out.println("No of Columns: "+ colCount);
			
			for(int i=1;i<=colCount;i++)
			{
				System.out.println("Column Name: "+rsmd.getColumnName(i));
				System.out.println("Column TypeName: "+rsmd.getColumnTypeName(i));
				System.out.println("Column Type: "+rsmd.getColumnType(i));
				System.out.println("Column Lable: "+rsmd.getColumnLabel(i));
				System.out.println("**************************");
			}
		} 
		catch (Exception e)
		{
			e.printStackTrace();
		}	


	}

}


















