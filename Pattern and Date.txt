************************Date**************************
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.time.format.DateTimeFormatter;


public class TestDate {

	public static void main(String[] args) {
		LocalDate today = LocalDate.now();
		LocalDateTime today1 = LocalDateTime.now();
		System.out.println("Today Date: "+today);
		System.out.println("Today Date: "+today1);
		System.out.println("*********************");
		
		LocalDate myDOJ = LocalDate.of(2010,04,03);
		System.out.println("My date of Joining: "+myDOJ);
		System.out.println("*******************************");
		
		//convert string to local date format
		String ronalDOJ = "13-Dec-2017";
		DateTimeFormatter myFormat = DateTimeFormatter.ofPattern("dd-MMM-yyyy");
		LocalDate joDOJ = LocalDate.parse(ronalDOJ, myFormat);
		System.out.println("Ronal DOJ= "+joDOJ);
		System.out.println("*******************************");
		
		//to another format
		DateTimeFormatter secondFormat = DateTimeFormatter.ofPattern("yyyy-MMM-dd");
		String urDOJ = joDOJ.format(secondFormat);
		System.out.println("......"+urDOJ);
		System.out.println("*******************************");
		
		//Arithmetic operations on date
		Period period = Period.between(myDOJ, today);
		int years = period.getYears();
		int months = period.getMonths();
		int days = period.getDays();
		
		System.out.println("my Exp In CG Is: "+years+"Years "+months+"Months "+days+"Days.");
	}

}


*******************Pattern*************************
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class TestPattern {

	public static void main(String[] args) {
		String inputStr = "Test String";
		String pattern = "Test String";
		boolean patternMatched = Pattern.matches(pattern, inputStr);
		System.out.println(patternMatched);
		System.out.println("*************************");
		
		String input = "Shop,Mop,Hopping,Chopping";
		Pattern pat = Pattern.compile("hop"); //compile() used to check for no of occurance
		Matcher matcher = pat.matcher(input); //else directly use this for single occurance
		//System.out.println(matcher.matches());
		while(matcher.find()) //like hasNext() iteration
		{
			System.out.println(matcher.group()+
					": "+matcher.start()+": "+matcher.end());
		}
		System.out.println("***************************");
			
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter UR Mobile No");
		String mobile = sc.next();
		String mobilePattern = "[7-9][0-9]{9}";
		
		if(Pattern.matches(mobilePattern, mobile))
		{
			System.out.println("Valid Mobile No");
			
		}
		else
		{
			System.out.println("Only 10 digits starts with 7 8 9 allowed");
		}
		System.out.println("************************************");
	}

}
